plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'com.github.johnrengelman.processes' version '0.5.0' apply false
    id 'com.github.node-gradle.node' version '3.0.1' apply false
    id 'org.sglahn.gradle-dockerfile-plugin' version '0.8' apply false
    id 'org.springdoc.openapi-gradle-plugin' version '1.3.1' apply false
}

allprojects {
    group = 'com.gmail.unmacaque'
    version = '0.0.1-SNAPSHOT'

    configurations {
        asciidoctorExtensions
        integrationImplementation.extendsFrom testImplementation
        integrationRuntime.extendsFrom testRuntime
    }
}

def javaProjects() {
    subprojects.findAll {new File(it.projectDir, 'src').exists() }
}

configure(javaProjects()) {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    sourceCompatibility = '11'
    targetCompatibility = '11'

    sourceSets {
        integration {
            java {
                compileClasspath += main.output + test.output
                runtimeClasspath += main.output + test.output
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    test {
        useJUnitPlatform()
    }

    task integrationTest(type: Test) {
        testClassesDirs = sourceSets.integration.output.classesDirs
        classpath = sourceSets.integration.runtimeClasspath
        useJUnitPlatform()
    }
}
